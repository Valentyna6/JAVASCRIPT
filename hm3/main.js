
// ------------------------------------No1------------------------------------------------


// --------- Створіть функцію wellcomUser, яка приймає масив і функцію-колбек hiUser яка виводить в console ('Вітаю ${user}'), і викликає цю функцію для кожного елемента масиву.

// let users = ['John', 'Sem', 'Nikol'];

// function wellcomUser(users, hiUser){
//     for (let i=0; i<users.length; i++){
//       hiUser(users[i]);
//     }

// }
//  function hiUser(user){
//     console.log(`Вітаю ${user}`);

//  }
//  wellcomUser(users, hiUser);
// ------------------------------------------------------------------------------------


// ------------------------------------No2------------------------------------------------

 //  Стрілкові функції
//  перепишіть попередню функцію в стрілкову


// let users = ['John', 'Sem', 'Nikol'];
// let hiUser=(user)=>{ console.log(`Вітаю ${user}`);};

// let welcomeUser=(users, hiUser)=> {for (let i=0;i<users.length;i++){ hiUser(users[i])}}

// welcomeUser(users, hiUser);
// ---------------------------------------------------------------------------------------


// ------------------------------------No3------------------------------------------------
// Перепишіть стрілкову функцію в звичайну 
// const multiplyValues = (a, b, c) => a * b * c;


// function multiplyValues(a,b,c){
//    return a * b * c
// }
// console.log(multiplyValues(2,5,3));

// ---------------------------------------------------------------------------------------


// ------------------------------------No4------------------------------------------------

// push:
// Завдання 1: Створіть порожній масив та використайте метод push, щоб додати до нього кілька елементів (наприклад, чисел чи рядків).



// let fruits = [];
// fruits.push('Papaya' ,'Apricot' ,'Watermelon');
// console.log(fruits);

// ---------------------------------------------------------------------------------------

// ------------------------------------No5------------------------------------------------
// push:
// Завдання 2: Створіть функцію, яка приймає масив і елемент, і використовує push для додавання цього елемента до масиву.
// let arrfruits=['Papaya' ,'Apricot' ,'Watermelon'];
// function fruits(i){
//     arrfruits.push(i);
// }
// fruits('orange');
// console.log(arrfruits);

// ------------------------------------No6------------------------------------------------
// pop:
// Завдання 1: Створіть масив і використайте метод pop, щоб видалити останній елемент з масиву.

// let frutarr =['Papaya' ,'Apricot' ,'Watermelon','orange'];
//  frutarr.pop();
// console.log(frutarr);

// ---------------------------------------------------------------------------------------


// ------------------------------------No7------------------------------------------------

// Завдання 2: Напишіть функцію, яка приймає масив і використовує pop для видалення останнього елемента масиву.

// let frutarr = ['Papaya' ,'Apricot' ,'Watermelon','orange'];
// function frutpop(){
// frutarr.pop();    
// }
// frutpop();
// console.log(frutarr);

// ---------------------------------------------------------------------------------------


// ------------------------------------No8------------------------------------------------
// unshift:
// Завдання 1: Створіть масив і використайте метод unshift, щоб додати елементи в початок масиву.

// let fruitarr=['Papaya' ,'Apricot' ,'Watermelon'];
// fruitarr.unshift('orange');
// console.log(fruitarr);

// ---------------------------------------------------------------------------------------


// ------------------------------------No9------------------------------------------------
// Завдання 2: Напишіть функцію, яка приймає масив і елемент, і використовує unshift для додавання цього елемента в початок масиву.

// let fruitArr=['Papaya' ,'Apricot' ,'Watermelon'];
// function fruitShift(i){
// fruitArr.unshift(i);
// }
// fruitShift('orange');
// console.log(fruitArr);

// ---------------------------------------------------------------------------------------


// ------------------------------------No10------------------------------------------------
// shift:
// Завдання 1: Створіть масив і використайте метод shift, щоб видалити перший елемент з масиву.

// let fruitArr=['Papaya' ,'Apricot' ,'Watermelon','orange'];
// fruitArr.shift();
// console.log(fruitArr);

// ---------------------------------------------------------------------------------------


// ------------------------------------No11------------------------------------------------
// Завдання 2: Напишіть функцію, яка приймає масив і використовує shift для видалення першого елемента масиву.

// let fruitArr =['Papaya' ,'Apricot' ,'Watermelon','orange'];
// function fruitfun(){
// fruitArr.shift();
// }
// fruitfun();
// console.log(fruitArr);


// ---------------------------------------------------------------------------------------

// ------------------------------------No12------------------------------------------------
// Додаткова робота:
// Створіть новий массив за допомогою методів розглянутих на уроці в якому видалені всі  значення "Remove"  з масиву  - ["Keep", "Remove", "Keep", "Remove", "Keep", "Keep", "Remove", "Remove"] в результаті повинен бути ось такий новий массив ["Keep", "Keep", "Keep", ...]

// let firstArr=["Keep", "Remove", "Keep", "Remove", "Keep", "Keep", "Remove", "Remove"];
// newArr =firstArr.filter(function(i){
// return i =="Keep";
// });


// console.log(newArr);
// (цей варіант, як я бачила вирішення задачі)


// or


// (цей варіант, дописала коли переглянула розбір домашнього завдання)(є якісь переваги у одного чи іншого варіанту чи обидва мають право на існування?)

// let firstArr=["Keep", "Remove", "Keep", "Remove", "Keep", "Keep", "Remove", "Remove"];
// let newArr=[];
// function remover(value){
//     for(let i=0;i<firstArr.length;i++){
//         if (value[i]=="Keep"){
//         newArr.push(value[i]);}
//     }
// return newArr
// }
// remover(firstArr);
// console.log(newArr);
// ---------------------------------------------------------------------------------------


// ------------------------------------No13------------------------------------------------

// Написати цикл який замінює відємне значення в масиві на 0  let checkArr = [69, 96, -66, 77, 85, -85, 14, -20, 90, -36] 

// let checkArr = [69, 96, -66, 77, 85, -85, 14, -20, 90, -36];

// for(i=0; i<checkArr.length;i++){
//     if (checkArr[i]<0){
//         checkArr[i]=0;
//     }
// }
// console.log(checkArr);


// ---------------------------------------------------------------------------------------


// ------------------------------------No14------------------------------------------------

// Створити цикл який виводить значення в консоль в такому форматі "Сьогодні ....  у вас такі плани .." для данних використовує два массива let days = ["Понеділок", "Середа", "Неділя"] let plans = ["Урок 03", "Урок 04", "Вихідни"]

// let days = ["Понеділок", "Середа", "Неділя"];
// let plans = ["Урок 03", "Урок 04", "Вихідни"];
// for(let i=0;i<days.length;i++){
// console.log(`сьогодні ${days[i]} у вас такі плани ${plans[i]}`)
// }

// (цей варіант, як я бачила вирішення задачі)


// or


// (цей варіант, дописала коли переглянула розбір домашнього завдання)(є якісь переваги у одного чи іншого варіанту чи обидва мають право на існування?)


// let days = ["Понеділок", "Середа", "Неділя"];
// let plans = ["Урок 03", "Урок 04", "Вихідни"];
// function planer (letdays, letplans){
// if (letdays.length === letplans.length){
//     for(let i=0;i<letdays.length;i++){
//         console.log(`сьогодні ${letdays[i]} у вас такі плани ${letplans[i]}`);
//     }
// }

// }
// planer(days,plans);



// ---------------------------------------------------------------------------------------



// ------------------------------------No15------------------------------------------------

// Створіть функцію modifyArray яка приймає массив та колбек функцію та повертає новий массив в якому кожне значення массиву змінене колбек функціє. ( наприклад помножене на 2 )

// let array = [2,5,3,7,9];
// let newArr =[];
// let doublevalye = (a)=>a*2;
// function modifyArray (arrayvalue,callback){
//     for(let i=0; i<arrayvalue.length;i++){
//         newArr.push(doublevalye(arrayvalue[i]));
//     }
// return newArr;

// }
// console.log(modifyArray(array,doublevalye));